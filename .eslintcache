[{"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\index.js":"1","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\App.js":"2","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\Product\\styles.js":"5","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Navbar\\styles.js":"7","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\styles.js":"8","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\lib\\commerce.js":"9","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\Cart.jsx":"10","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\styles.js":"11","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"12","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\CartItem\\styles.js":"13","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"14","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"15","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\AddresForm.jsx":"16","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"18","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\Review.jsx":"19"},{"size":147,"mtime":1609338390001,"results":"20","hashOfConfig":"21"},{"size":3209,"mtime":1609792662679,"results":"22","hashOfConfig":"21"},{"size":725,"mtime":1609346760439,"results":"23","hashOfConfig":"21"},{"size":1399,"mtime":1609347257388,"results":"24","hashOfConfig":"21"},{"size":455,"mtime":1609341584548,"results":"25","hashOfConfig":"21"},{"size":1497,"mtime":1609436351704,"results":"26","hashOfConfig":"21"},{"size":1631,"mtime":1609343529741,"results":"27","hashOfConfig":"21"},{"size":298,"mtime":1609343906566,"results":"28","hashOfConfig":"21"},{"size":125,"mtime":1609344457557,"results":"29","hashOfConfig":"21"},{"size":2637,"mtime":1609529133779,"results":"30","hashOfConfig":"21"},{"size":597,"mtime":1609356449717,"results":"31","hashOfConfig":"21"},{"size":1273,"mtime":1609527525077,"results":"32","hashOfConfig":"21"},{"size":349,"mtime":1609435069123,"results":"33","hashOfConfig":"21"},{"size":3824,"mtime":1609796626136,"results":"34","hashOfConfig":"21"},{"size":1208,"mtime":1609530009257,"results":"35","hashOfConfig":"21"},{"size":4704,"mtime":1609789207756,"results":"36","hashOfConfig":"21"},{"size":2534,"mtime":1609794032591,"results":"37","hashOfConfig":"21"},{"size":579,"mtime":1609780818315,"results":"38","hashOfConfig":"21"},{"size":1679,"mtime":1609785775694,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1bqv9t4",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\index.js",[],["83","84"],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\App.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Navbar\\Navbar.jsx",["85","86","87"],"import React from 'react'\r\nimport {AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core';\r\nimport {LocalLibraryTwoTone, ShoppingCart} from '@material-ui/icons';\r\nimport logo from '../../assets/logo.png';\r\nimport useStyles from './styles';\r\nimport {Link, useLocation} from 'react-router-dom'\r\n\r\nfunction Navbar({totalItems}) {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n          <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Commerce shop\" height=\"25px\" className={classes.image}/>\r\n                        Nome da loja\r\n                    </Typography>\r\n                    <div className={classes.grow}></div>\r\n                     {location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/carrinho\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div>\r\n                    )}\r\n                </Toolbar>\r\n          </AppBar>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\lib\\commerce.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["88"],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\AddresForm.jsx",["89","90"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n  \r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Endereço de envio</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"Primeiro nome\" />\r\n            <FormInput required name=\"lastName\" label=\"Último nome\" />\r\n            <FormInput required name=\"address1\" label=\"Endereço de envio\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"Cidade\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Código Postal\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>País</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Cidade</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Tipo de envio</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Voltar ao carrinho</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Próximo passo</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default AddressForm;","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",["91","92"],"import React,{useState, useEffect} from 'react';\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport Review from './Review'\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nfunction PaymentForm({shippingData,checkoutToken,backStep,onCaptureCheckout,nextStep})  {\r\n   \r\n  const handleSubmit = async (event, elements, stripe) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) return;\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n    } else {\r\n      const orderData = {\r\n        line_items: checkoutToken.live.line_items,\r\n        customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\r\n        shipping: { name: 'International', street: shippingData.address1, town_city: shippingData.city, county_state: shippingData.shippingSubdivision, postal_zip_code: shippingData.zip, country: shippingData.shippingCountry },\r\n        fulfillment: { shipping_method: shippingData.shippingOption },\r\n        payment: {\r\n          gateway: 'stripe',\r\n          stripe: {\r\n            payment_method_id: paymentMethod.id,\r\n          },\r\n        },\r\n      };\r\n\r\n      onCaptureCheckout(checkoutToken.id, orderData);\r\n\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n    return (\r\n      <>\r\n      <Review checkoutToken={checkoutToken} shippingData={shippingData} />\r\n      <Divider />\r\n      <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Métodos de pagamento</Typography>\r\n      <Elements stripe={stripePromise}>\r\n       <ElementsConsumer>{({ elements, stripe }) => (\r\n          <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n            <CardElement />\r\n            <br /> <br />\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Button variant=\"outlined\" onClick={backStep}>Voltar atrás</Button>\r\n              <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">\r\n                Pagar {checkoutToken.live.subtotal.formatted_with_symbol}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n","C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\gonca\\Desktop\\revendoweb\\react\\react-ecommerce\\src\\components\\CheckoutForm\\Review.jsx",["93"],"import React from 'react'\r\nimport {Typography, List, ListItem, ListItemText} from '@material-ui/core'\r\n\r\nfunction Review({shippingData,checkoutToken}) {\r\n    const sD = [{\r\n        city: `${shippingData.city}`,\r\n        address: `${shippingData.address1}`,\r\n        email: `${shippingData.email}`\r\n         }]\r\n        \r\n    return (\r\n            <>\r\n\r\n        <Typography variant=\"h6\" gutterBottom>Está tudo correcto?</Typography>\r\n        <List disablePadding>\r\n          {checkoutToken.live.line_items.map((product) => (\r\n            <ListItem style={{ padding: '10px 0' }} key={product.name}>\r\n              <ListItemText primary={product.name} secondary={`Quantidade: ${product.quantity}`} />\r\n              <Typography variant=\"body2\">{product.line_total.formatted_with_symbol}</Typography>\r\n            </ListItem>\r\n          ))} \r\n\r\n          <ListItemText align=\"center\" primary=\"Dados de envio:\"/>\r\n         \r\n            <ListItem style={{ padding: '10px 0'}}>\r\n                <ListItemText align='center' primary=\"Cidade\" secondary={sD.map((d)=>d.city)}/> \r\n                <ListItemText align='center' primary=\"Rua\" secondary={sD.map((d)=>d.address)}/>\r\n                <ListItemText align='center' primary=\"Email\" secondary={sD.map((d)=>d.email)}/>\r\n            </ListItem>              \r\n           \r\n\r\n          <ListItem style={{ padding: '10px 0'}}>\r\n            <ListItemText primary=\"Total\" />\r\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n              {checkoutToken.live.subtotal.formatted_with_symbol}\r\n            </Typography>\r\n          </ListItem>\r\n        </List>\r\n      </>\r\n    )\r\n}\r\n\r\n{/**/}\r\nexport default Review\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":45,"nodeType":"100","messageId":"101","endLine":2,"endColumn":53},{"ruleId":"98","severity":1,"message":"102","line":2,"column":55,"nodeType":"100","messageId":"101","endLine":2,"endColumn":59},{"ruleId":"98","severity":1,"message":"103","line":3,"column":9,"nodeType":"100","messageId":"101","endLine":3,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":31,"column":7,"nodeType":"106","endLine":31,"endColumn":13,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":41,"column":6,"nodeType":"106","endLine":41,"endColumn":8,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":49,"column":6,"nodeType":"106","endLine":49,"endColumn":27,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"112","line":1,"column":15,"nodeType":"100","messageId":"101","endLine":1,"endColumn":23},{"ruleId":"98","severity":1,"message":"113","line":1,"column":25,"nodeType":"100","messageId":"101","endLine":1,"endColumn":34},{"ruleId":"114","severity":1,"message":"115","line":43,"column":1,"nodeType":"116","messageId":"117","endLine":43,"endColumn":7},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'LocalLibraryTwoTone' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["122"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"129","text":"130"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"131","text":"132"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"133","text":"134"},[1406,1412],"[activeStep, cart, history]",[1708,1710],"[checkoutToken.id]",[1963,1984],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]